generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STAFF
  EVENT_OWNER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified Json?
  accounts      Account[]
  events        Event[]   @relation("UserEvents")
  sessions      Session[]

  role          Role?
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String?
  date        DateTime
  location    String
  createdBy   String
  createdAt   DateTime @default(now())
  owner       User     @relation("UserEvents", fields: [createdBy], references: [id])
  rsvps       Rsvp[]

  attendeeCount    Int     @default(0)
  maxAttendeeCount Int?    // optional = unlimited

  @@map("event")
}

model Rsvp {
  id        String   @id @default(uuid())
  eventId   String
  name      String
  email     String
  status    String
  createdAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id])

  @@unique([eventId, email])
  @@map("rsvp")
}
